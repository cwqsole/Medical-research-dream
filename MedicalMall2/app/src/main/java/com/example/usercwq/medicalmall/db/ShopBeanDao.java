package com.example.usercwq.medicalmall.db;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.example.usercwq.medicalmall.bean.shopping_bean.ShopBean;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "SHOP_BEAN".
*/
public class ShopBeanDao extends AbstractDao<ShopBean, Long> {

    public static final String TABLENAME = "SHOP_BEAN";

    /**
     * Properties of entity ShopBean.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Name = new Property(1, String.class, "name", false, "NAME");
        public final static Property Pic = new Property(2, String.class, "pic", false, "PIC");
        public final static Property Yuan_price = new Property(3, String.class, "yuan_price", false, "YUAN_PRICE");
        public final static Property Xian_price = new Property(4, String.class, "xian_price", false, "XIAN_PRICE");
        public final static Property Ding = new Property(5, String.class, "ding", false, "DING");
        public final static Property Wu_li_you = new Property(6, String.class, "wu_li_you", false, "WU_LI_YOU");
        public final static Property NewX = new Property(7, String.class, "newX", false, "NEW_X");
        public final static Property Fa_huo_time = new Property(8, String.class, "fa_huo_time", false, "FA_HUO_TIME");
        public final static Property Yun_price = new Property(9, String.class, "yun_price", false, "YUN_PRICE");
        public final static Property Yue_shou = new Property(10, String.class, "yue_shou", false, "YUE_SHOU");
        public final static Property Fa_huo_di = new Property(11, String.class, "fa_huo_di", false, "FA_HUO_DI");
        public final static Property Type_id = new Property(12, String.class, "type_id", false, "TYPE_ID");
        public final static Property Re_mai = new Property(13, String.class, "re_mai", false, "RE_MAI");
        public final static Property Zhekou = new Property(14, String.class, "zhekou", false, "ZHEKOU");
        public final static Property Desc = new Property(15, String.class, "desc", false, "DESC");
        public final static Property Shop_desc = new Property(16, String.class, "shop_desc", false, "SHOP_DESC");
        public final static Property Is_sp = new Property(17, String.class, "is_sp", false, "IS_SP");
        public final static Property Xiang_qing = new Property(18, String.class, "xiang_qing", false, "XIANG_QING");
    }


    public ShopBeanDao(DaoConfig config) {
        super(config);
    }
    
    public ShopBeanDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"SHOP_BEAN\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"NAME\" TEXT," + // 1: name
                "\"PIC\" TEXT," + // 2: pic
                "\"YUAN_PRICE\" TEXT," + // 3: yuan_price
                "\"XIAN_PRICE\" TEXT," + // 4: xian_price
                "\"DING\" TEXT," + // 5: ding
                "\"WU_LI_YOU\" TEXT," + // 6: wu_li_you
                "\"NEW_X\" TEXT," + // 7: newX
                "\"FA_HUO_TIME\" TEXT," + // 8: fa_huo_time
                "\"YUN_PRICE\" TEXT," + // 9: yun_price
                "\"YUE_SHOU\" TEXT," + // 10: yue_shou
                "\"FA_HUO_DI\" TEXT," + // 11: fa_huo_di
                "\"TYPE_ID\" TEXT," + // 12: type_id
                "\"RE_MAI\" TEXT," + // 13: re_mai
                "\"ZHEKOU\" TEXT," + // 14: zhekou
                "\"DESC\" TEXT," + // 15: desc
                "\"SHOP_DESC\" TEXT," + // 16: shop_desc
                "\"IS_SP\" TEXT," + // 17: is_sp
                "\"XIANG_QING\" TEXT);"); // 18: xiang_qing
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"SHOP_BEAN\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, ShopBean entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(2, name);
        }
 
        String pic = entity.getPic();
        if (pic != null) {
            stmt.bindString(3, pic);
        }
 
        String yuan_price = entity.getYuan_price();
        if (yuan_price != null) {
            stmt.bindString(4, yuan_price);
        }
 
        String xian_price = entity.getXian_price();
        if (xian_price != null) {
            stmt.bindString(5, xian_price);
        }
 
        String ding = entity.getDing();
        if (ding != null) {
            stmt.bindString(6, ding);
        }
 
        String wu_li_you = entity.getWu_li_you();
        if (wu_li_you != null) {
            stmt.bindString(7, wu_li_you);
        }
 
        String newX = entity.getNewX();
        if (newX != null) {
            stmt.bindString(8, newX);
        }
 
        String fa_huo_time = entity.getFa_huo_time();
        if (fa_huo_time != null) {
            stmt.bindString(9, fa_huo_time);
        }
 
        String yun_price = entity.getYun_price();
        if (yun_price != null) {
            stmt.bindString(10, yun_price);
        }
 
        String yue_shou = entity.getYue_shou();
        if (yue_shou != null) {
            stmt.bindString(11, yue_shou);
        }
 
        String fa_huo_di = entity.getFa_huo_di();
        if (fa_huo_di != null) {
            stmt.bindString(12, fa_huo_di);
        }
 
        String type_id = entity.getType_id();
        if (type_id != null) {
            stmt.bindString(13, type_id);
        }
 
        String re_mai = entity.getRe_mai();
        if (re_mai != null) {
            stmt.bindString(14, re_mai);
        }
 
        String zhekou = entity.getZhekou();
        if (zhekou != null) {
            stmt.bindString(15, zhekou);
        }
 
        String desc = entity.getDesc();
        if (desc != null) {
            stmt.bindString(16, desc);
        }
 
        String shop_desc = entity.getShop_desc();
        if (shop_desc != null) {
            stmt.bindString(17, shop_desc);
        }
 
        String is_sp = entity.getIs_sp();
        if (is_sp != null) {
            stmt.bindString(18, is_sp);
        }
 
        String xiang_qing = entity.getXiang_qing();
        if (xiang_qing != null) {
            stmt.bindString(19, xiang_qing);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, ShopBean entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(2, name);
        }
 
        String pic = entity.getPic();
        if (pic != null) {
            stmt.bindString(3, pic);
        }
 
        String yuan_price = entity.getYuan_price();
        if (yuan_price != null) {
            stmt.bindString(4, yuan_price);
        }
 
        String xian_price = entity.getXian_price();
        if (xian_price != null) {
            stmt.bindString(5, xian_price);
        }
 
        String ding = entity.getDing();
        if (ding != null) {
            stmt.bindString(6, ding);
        }
 
        String wu_li_you = entity.getWu_li_you();
        if (wu_li_you != null) {
            stmt.bindString(7, wu_li_you);
        }
 
        String newX = entity.getNewX();
        if (newX != null) {
            stmt.bindString(8, newX);
        }
 
        String fa_huo_time = entity.getFa_huo_time();
        if (fa_huo_time != null) {
            stmt.bindString(9, fa_huo_time);
        }
 
        String yun_price = entity.getYun_price();
        if (yun_price != null) {
            stmt.bindString(10, yun_price);
        }
 
        String yue_shou = entity.getYue_shou();
        if (yue_shou != null) {
            stmt.bindString(11, yue_shou);
        }
 
        String fa_huo_di = entity.getFa_huo_di();
        if (fa_huo_di != null) {
            stmt.bindString(12, fa_huo_di);
        }
 
        String type_id = entity.getType_id();
        if (type_id != null) {
            stmt.bindString(13, type_id);
        }
 
        String re_mai = entity.getRe_mai();
        if (re_mai != null) {
            stmt.bindString(14, re_mai);
        }
 
        String zhekou = entity.getZhekou();
        if (zhekou != null) {
            stmt.bindString(15, zhekou);
        }
 
        String desc = entity.getDesc();
        if (desc != null) {
            stmt.bindString(16, desc);
        }
 
        String shop_desc = entity.getShop_desc();
        if (shop_desc != null) {
            stmt.bindString(17, shop_desc);
        }
 
        String is_sp = entity.getIs_sp();
        if (is_sp != null) {
            stmt.bindString(18, is_sp);
        }
 
        String xiang_qing = entity.getXiang_qing();
        if (xiang_qing != null) {
            stmt.bindString(19, xiang_qing);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public ShopBean readEntity(Cursor cursor, int offset) {
        ShopBean entity = new ShopBean( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // name
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // pic
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // yuan_price
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // xian_price
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // ding
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // wu_li_you
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // newX
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // fa_huo_time
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // yun_price
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // yue_shou
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // fa_huo_di
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // type_id
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // re_mai
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // zhekou
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // desc
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // shop_desc
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // is_sp
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18) // xiang_qing
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, ShopBean entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setName(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setPic(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setYuan_price(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setXian_price(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setDing(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setWu_li_you(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setNewX(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setFa_huo_time(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setYun_price(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setYue_shou(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setFa_huo_di(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setType_id(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setRe_mai(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setZhekou(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setDesc(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setShop_desc(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setIs_sp(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setXiang_qing(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(ShopBean entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(ShopBean entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(ShopBean entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
